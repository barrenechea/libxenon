diff -ENwbur ../gcc-13.3.0/config.sub gcc-13.3.0/config.sub
--- ../gcc-13.3.0/config.sub	2024-05-21 03:47:37.000000000 -0400
+++ gcc-13.3.0/config.sub	2025-03-06 09:35:13.661395452 -0300
@@ -883,6 +883,10 @@
 		cpu=power
 		vendor=ibm
 		;;
+	xenon)
+		cpu=powerpc64
+		basic_os=linux
+		;;
 	ps2)
 		cpu=i386
 		vendor=ibm
diff -ENwbur ../gcc-13.3.0/gcc/config/rs6000/altivec.md gcc-13.3.0/gcc/config/rs6000/altivec.md
--- ../gcc-13.3.0/gcc/config/rs6000/altivec.md	2024-05-21 03:47:38.000000000 -0400
+++ gcc-13.3.0/gcc/config/rs6000/altivec.md	2025-03-06 09:38:16.447865885 -0300
@@ -1009,7 +1009,7 @@
 		      (match_operand:VIshort 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMU))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumu<VI_char>m %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1029,7 +1029,7 @@
 		      (match_operand:VIshort 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMM))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumm<VI_char>m %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1039,7 +1039,7 @@
 		      (match_operand:V8HI 2 "register_operand" "v")
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMSHM))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumshm %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1050,7 +1050,7 @@
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMUHS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumuhs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1061,7 +1061,7 @@
                       (match_operand:V4SI 3 "register_operand" "v")]
 		     UNSPEC_VMSUMSHS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmsumshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1122,7 +1122,7 @@
                       (match_operand:V8HI 3 "register_operand" "v")]
 		     UNSPEC_VMHADDSHS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmhaddshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1133,7 +1133,7 @@
                       (match_operand:V8HI 3 "register_operand" "v")]
 		     UNSPEC_VMHRADDSHS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmhraddshs %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1142,7 +1142,7 @@
         (plus:V8HI (mult:V8HI (match_operand:V8HI 1 "register_operand" "v")
 		   	      (match_operand:V8HI 2 "register_operand" "v"))
 		   (match_operand:V8HI 3 "register_operand" "v")))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmladduhm %0,%1,%2,%3"
   [(set_attr "type" "veccomplex")])
 
@@ -1659,7 +1659,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULEUB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmuleub %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1668,7 +1668,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULOUB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmuloub %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1677,7 +1677,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULESB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulesb %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1686,7 +1686,7 @@
         (unspec:V8HI [(match_operand:V16QI 1 "register_operand" "v")
                       (match_operand:V16QI 2 "register_operand" "v")]
 		     UNSPEC_VMULOSB))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulosb %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1704,7 +1704,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULOUH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulouh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -1722,7 +1722,7 @@
         (unspec:V4SI [(match_operand:V8HI 1 "register_operand" "v")
                       (match_operand:V8HI 2 "register_operand" "v")]
 		     UNSPEC_VMULOSH))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vmulosh %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -2083,7 +2083,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM4UBS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum4ubs %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -2093,7 +2093,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM4S))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum4s<VI_char>s %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -2126,7 +2126,7 @@
 	              (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUM2SWS))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsum2sws %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
@@ -2158,7 +2158,7 @@
                       (match_operand:V4SI 2 "register_operand" "v")]
 		     UNSPEC_VSUMSWS_DIRECT))
    (set (reg:SI VSCR_REGNO) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]
-  "TARGET_ALTIVEC"
+  "(TARGET_ALTIVEC && 0)"
   "vsumsws %0,%1,%2"
   [(set_attr "type" "veccomplex")])
 
diff -ENwbur ../gcc-13.3.0/gcc/opts.cc gcc-13.3.0/gcc/opts.cc
--- ../gcc-13.3.0/gcc/opts.cc	2024-05-21 03:47:38.000000000 -0400
+++ gcc-13.3.0/gcc/opts.cc	2025-03-12 10:41:23.474739786 -0300
@@ -1309,7 +1309,7 @@
 				       loc);
 
   /* Allow cunroll to grow size accordingly.  */
-  if (!opts_set->x_flag_cunroll_grow_size)
+  if (!opts_set->x_flag_cunroll_grow_size && 0)
     opts->x_flag_cunroll_grow_size
       = (opts->x_flag_unroll_loops
          || opts->x_flag_peel_loops
diff -ENwbur ../gcc-13.3.0/libstdc++-v3/configure gcc-13.3.0/libstdc++-v3/configure
--- ../gcc-13.3.0/libstdc++-v3/configure	2024-05-21 03:47:42.000000000 -0400
+++ gcc-13.3.0/libstdc++-v3/configure	2025-03-06 09:38:47.530412704 -0300
@@ -11472,6 +11472,7 @@
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
+  lt_cv_shlibpath_overrides_runpath=no
 
   # Some binutils ld are patched to set DT_RUNPATH
   if ${lt_cv_shlibpath_overrides_runpath+:} false; then :
