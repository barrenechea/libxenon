name: Container Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CONTAINER_REPO: ghcr.io/barrenechea/libxenon

jobs:
  build-push-toolchain:
    name: Build and Push Toolchain
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm]
        include:
          - os: ubuntu-24.04
            arch: amd64
          - os: ubuntu-24.04-arm
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Container Image
        uses: docker/build-push-action@v6
        env:
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.CONTAINER_REPO }}:latest-${{ matrix.arch }}
            ${{ env.CONTAINER_REPO }}:${{ github.sha }}-${{ matrix.arch }}

  create-manifests:
    name: Create Unified Manifests
    runs-on: ubuntu-latest
    needs: build-push-toolchain
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create SHA Manifest and Push
        run: |
          docker manifest create \
            ${{ env.CONTAINER_REPO }}:${{ github.sha }} \
            --amend ${{ env.CONTAINER_REPO }}:${{ github.sha }}-amd64 \
            --amend ${{ env.CONTAINER_REPO }}:${{ github.sha }}-arm64
          docker manifest push ${{ env.CONTAINER_REPO }}:${{ github.sha }}

      - name: Create latest Manifest and Push
        run: |
          docker manifest create \
            ${{ env.CONTAINER_REPO }}:latest \
            --amend ${{ env.CONTAINER_REPO }}:latest-amd64 \
            --amend ${{ env.CONTAINER_REPO }}:latest-arm64
          docker manifest push ${{ env.CONTAINER_REPO }}:latest
